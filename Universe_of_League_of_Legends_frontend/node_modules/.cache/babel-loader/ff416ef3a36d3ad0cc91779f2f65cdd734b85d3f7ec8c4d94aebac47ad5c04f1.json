{"ast":null,"code":"import { reactive, toRefs } from \"vue\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"regional_information\",\n  components: {},\n  setup() {\n    //这里存放数据\n    const data = reactive({\n      region: {},\n      heroes: [{\n        formerly: \"gangplank\",\n        releaseDate: \"2023-06-21 08:00:00\",\n        translation: \"普朗克\",\n        title: \"海洋之灾\",\n        races: \"null\",\n        relevantRegion: \"bilgewater\",\n        role: \"fighter\",\n        biography: \"<p>诡计多端、心狠手辣的普朗克自封为强盗之王，他用威慑、暴力和权谋统治着比尔吉沃特。他所到之处，定会留下死亡和废墟，所以，他声名狼藉、臭名远扬，只要他的黑帆刚刚露出海平面，无论多么老练的船队水手都会手忙脚乱。</p><p>普朗克是从十二海域的贸易航路上抢劫商船起家的，因此与他结仇的劲敌为数甚多。在艾欧尼亚，他洗劫了蛇刀庙，由此惹火上身，激怒了杀人不眨眼的影流教派。而且据说，诺克萨斯大将军本人发誓要亲眼看到普朗克被碎尸万段，因为他偷走了“利维坦号”，那可是斯维因的战舰，也是诺克萨斯海军的骄傲。</p><p>虽然普朗克是许多人的心头大患，他们派出刺客、赏金猎人甚至武装舰队，都无法将他绳之以法。他的残忍乐趣就在于看着自己头上的赏金奖励持续走高。每次他满载而归地回到比尔吉沃特，都会将自己最新的通缉令钉在比尔吉沃特的悬赏告示栏上，让所有人都能看到。</p><p>最近，普朗克却被赏金猎人厄运小姐的诡计摆了一道。他的海盗船在比尔吉沃特全城居民众目睽睽之下被摧毁了，手下的船员也被杀害，他战无不胜的无敌神话也被彻底粉碎。现在，比尔吉沃特的各个帮派看到普朗克大势已去，纷纷趁乱崛起，在纷争中抢夺这座港口城市的控制权。</p><p>虽然普朗克在爆炸中受了重伤，但他侥幸活了下来。他的身上遍布着支离破碎的伤疤，一条手臂也被截去。但他装上了铁铸的义肢，并决心重建自己的威望。普朗克立誓要夺回曾经拥有的一切，并毫不留情地惩处所有冒犯过他的人。</p>\",\n        synopsis: \"诡计多端、心狠手辣的普朗克是被废黜的强盗之王，他令人恐惧的名号广达远至。他一度是港口城市比尔吉沃特的统治者。虽然现在他的威权已经不再，但人们相信这只会让他变得更加可怖。普朗克若是知道有人要从他手中抢走比尔吉沃特，必然会大肆血洗这座城市。而如今有了火枪、弯刀，还有一桶桶的火药，他决心要夺回自己失去的东西。\",\n        motto: \"“老子杀人越货大闹诺克萨斯海军的时候，你还穿开裆裤呢。你可别惹我。”\",\n        relatedPeople: \"missfortune,swain,zed,illaoi,twistedfate,graves\",\n        posters: \"gangplank_普朗克.jpg\",\n        width: 1215,\n        height: 717,\n        x: 838,\n        y: 6\n      }]\n    });\n    return {\n      ...toRefs(data)\n    };\n  },\n  //计算属性\n  computed: {},\n  //监听属性\n  watch: {},\n  //方法集合\n  methods: {\n    ...mapGetters([\"GET_ROGIONBYFORMERLY\"]),\n    getHeroesByRegion(regionId) {\n      axios.get(`http://localhost:8089/api/findHeroesByRegion?region=${regionId}`).then(response => {\n        this.heroes = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    // this.region = this.GET_ROGIONBYFORMERLY(this.$route.params.regionId);\n    // this.getHeroesByRegion(this.$route.params.regionId);\n  },\n  beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed() {},\n  //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};","map":{"version":3,"names":["reactive","toRefs","axios","mapGetters","name","components","setup","data","region","heroes","formerly","releaseDate","translation","title","races","relevantRegion","role","biography","synopsis","motto","relatedPeople","posters","width","height","x","y","computed","watch","methods","getHeroesByRegion","regionId","get","then","response","catch","error","console","created","mounted","beforeCreate","beforeMount","beforeUpdate","updated","beforeDestroy","destroyed","activated"],"sources":["D:\\MyCode\\Vuescode\\league_of_legends_universe\\src\\views\\regional_information.vue"],"sourcesContent":["<template>\r\n    <div\r\n        id=\"head\"\r\n        :style=\"{\r\n          'background-image': 'url('+require(`@/assets/img/regional_posters/${region.posters}`)+')',\r\n          'background-size': 'cover',\r\n        }\"\r\n    >\r\n        <div>\r\n            <img\r\n                class=\"icon\"\r\n                :src=\"require(`@/assets/img/crest_icon/${region.icon}`)\"\r\n            >\r\n            <h1>\r\n                {{ region.translation }}\r\n            </h1>\r\n            <img\r\n                src=\"@/assets/img/public_img/t1HeaderDivider.png\"\r\n                style=\"width: 100vw\"\r\n            >\r\n        </div>\r\n    </div>\r\n    <div id=\"mind\">\r\n        <div class=\"min_1\">\r\n            <p>{{ region.description }}</p>\r\n        </div>\r\n        <img\r\n            class=\"emblem\"\r\n            :src=\"require(`@/assets/img/emblem/${region.emblem}`)\"\r\n            alt=\"\"\r\n        >\r\n        <div id=\"box_head\">\r\n            <img src=\"@/assets/img/public_img/hero_crest_icon.png\">\r\n            <p>{{region.translation}}的英雄们</p>\r\n            <div id=\"hero_list\">\r\n                <router-link\r\n                    v-for=\"(hero,index) in heroes\"\r\n                    :key=\"index\"\r\n                    :to=\"`/HeroInfo/${hero.formerly}`\"\r\n                >\r\n                    <div\r\n                        class=\"hero_card\"\r\n                        :style=\"{\r\n                  'background-image': 'url(' + require(`@/assets/img/hero_posters/${hero.posters}`) + ')',\r\n                  'background-position': `${hero.x*1.0/hero.width*100}% ${hero.y*1.0/hero.height*100}%`,\r\n                  'background-size': 'cover',\r\n                  }\"\r\n                    >\r\n                        <div>\r\n                            <div>\r\n                                <h2>{{ hero.translation }}</h2>\r\n                                <h1>{{ region.translation }}</h1>\r\n                            </div>\r\n                            <div>\r\n                                <p>探索<span>⇢</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n    name: \"regional_information\",\r\n    components: {},\r\n    setup() {\r\n        //这里存放数据\r\n        const data = reactive({\r\n            region: {},\r\n            heroes: [\r\n                {\r\n                    formerly: \"gangplank\",\r\n                    releaseDate: \"2023-06-21 08:00:00\",\r\n                    translation: \"普朗克\",\r\n                    title: \"海洋之灾\",\r\n                    races: \"null\",\r\n                    relevantRegion: \"bilgewater\",\r\n                    role: \"fighter\",\r\n                    biography:\r\n                        \"<p>诡计多端、心狠手辣的普朗克自封为强盗之王，他用威慑、暴力和权谋统治着比尔吉沃特。他所到之处，定会留下死亡和废墟，所以，他声名狼藉、臭名远扬，只要他的黑帆刚刚露出海平面，无论多么老练的船队水手都会手忙脚乱。</p><p>普朗克是从十二海域的贸易航路上抢劫商船起家的，因此与他结仇的劲敌为数甚多。在艾欧尼亚，他洗劫了蛇刀庙，由此惹火上身，激怒了杀人不眨眼的影流教派。而且据说，诺克萨斯大将军本人发誓要亲眼看到普朗克被碎尸万段，因为他偷走了“利维坦号”，那可是斯维因的战舰，也是诺克萨斯海军的骄傲。</p><p>虽然普朗克是许多人的心头大患，他们派出刺客、赏金猎人甚至武装舰队，都无法将他绳之以法。他的残忍乐趣就在于看着自己头上的赏金奖励持续走高。每次他满载而归地回到比尔吉沃特，都会将自己最新的通缉令钉在比尔吉沃特的悬赏告示栏上，让所有人都能看到。</p><p>最近，普朗克却被赏金猎人厄运小姐的诡计摆了一道。他的海盗船在比尔吉沃特全城居民众目睽睽之下被摧毁了，手下的船员也被杀害，他战无不胜的无敌神话也被彻底粉碎。现在，比尔吉沃特的各个帮派看到普朗克大势已去，纷纷趁乱崛起，在纷争中抢夺这座港口城市的控制权。</p><p>虽然普朗克在爆炸中受了重伤，但他侥幸活了下来。他的身上遍布着支离破碎的伤疤，一条手臂也被截去。但他装上了铁铸的义肢，并决心重建自己的威望。普朗克立誓要夺回曾经拥有的一切，并毫不留情地惩处所有冒犯过他的人。</p>\",\r\n                    synopsis:\r\n                        \"诡计多端、心狠手辣的普朗克是被废黜的强盗之王，他令人恐惧的名号广达远至。他一度是港口城市比尔吉沃特的统治者。虽然现在他的威权已经不再，但人们相信这只会让他变得更加可怖。普朗克若是知道有人要从他手中抢走比尔吉沃特，必然会大肆血洗这座城市。而如今有了火枪、弯刀，还有一桶桶的火药，他决心要夺回自己失去的东西。\",\r\n                    motto: \"“老子杀人越货大闹诺克萨斯海军的时候，你还穿开裆裤呢。你可别惹我。”\",\r\n                    relatedPeople:\r\n                        \"missfortune,swain,zed,illaoi,twistedfate,graves\",\r\n                    posters: \"gangplank_普朗克.jpg\",\r\n                    width: 1215,\r\n                    height: 717,\r\n                    x: 838,\r\n                    y: 6,\r\n                },\r\n            ],\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n    //计算属性\r\n    computed: {},\r\n    //监听属性\r\n    watch: {},\r\n    //方法集合\r\n    methods: {\r\n        ...mapGetters([\"GET_ROGIONBYFORMERLY\"]),\r\n        getHeroesByRegion(regionId) {\r\n            axios\r\n                .get(\r\n                    `http://localhost:8089/api/findHeroesByRegion?region=${regionId}`\r\n                )\r\n                .then((response) => {\r\n                    this.heroes = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n    },\r\n    //生命周期 - 创建完成（可以访问当前this实例）\r\n    created() {},\r\n    //生命周期 - 挂载完成（可以访问DOM元素）\r\n    mounted() {\r\n        // this.region = this.GET_ROGIONBYFORMERLY(this.$route.params.regionId);\r\n        // this.getHeroesByRegion(this.$route.params.regionId);\r\n    },\r\n    beforeCreate() {}, //生命周期 - 创建之前\r\n    beforeMount() {}, //生命周期 - 挂载之前\r\n    beforeUpdate() {}, //生命周期 - 更新之前\r\n    updated() {}, //生命周期 - 更新之后\r\n    beforeDestroy() {}, //生命周期 - 销毁之前\r\n    destroyed() {}, //生命周期 - 销毁完成\r\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang='less' scoped>\r\n@import url(../assets/css/Clear_style.css);\r\n@import url(../assets/css/regional_information.css);\r\n</style>"],"mappings":"AAgEA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAK;AACtC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,eAAe;EACXC,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,IAAG,GAAIP,QAAQ,CAAC;MAClBQ,MAAM,EAAE,CAAC,CAAC;MACVC,MAAM,EAAE,CACJ;QACIC,QAAQ,EAAE,WAAW;QACrBC,WAAW,EAAE,qBAAqB;QAClCC,WAAW,EAAE,KAAK;QAClBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,cAAc,EAAE,YAAY;QAC5BC,IAAI,EAAE,SAAS;QACfC,SAAS,EACL,6mBAA6mB;QACjnBC,QAAQ,EACJ,0JAA0J;QAC9JC,KAAK,EAAE,oCAAoC;QAC3CC,aAAa,EACT,iDAAiD;QACrDC,OAAO,EAAE,mBAAmB;QAC5BC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,GAAG;QACXC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE;MACP,CAAC;IAET,CAAC,CAAC;IACF,OAAO;MACH,GAAGxB,MAAM,CAACM,IAAI;IAClB,CAAC;EACL,CAAC;EACD;EACAmB,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,KAAK,EAAE,CAAC,CAAC;EACT;EACAC,OAAO,EAAE;IACL,GAAGzB,UAAU,CAAC,CAAC,sBAAsB,CAAC,CAAC;IACvC0B,iBAAiBA,CAACC,QAAQ,EAAE;MACxB5B,KAAI,CACC6B,GAAG,CACC,uDAAsDD,QAAS,EACpE,EACCE,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACxB,MAAK,GAAIwB,QAAQ,CAAC1B,IAAI;MAC/B,CAAC,EACA2B,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV;EACJ,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ;EACAC,OAAOA,CAAA,EAAG;IACN;IACA;EAAA,CACH;EACDC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,WAAWA,CAAA,EAAG,CAAC,CAAC;EAAE;EAClBC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,OAAOA,CAAA,EAAG,CAAC,CAAC;EAAE;EACdC,aAAaA,CAAA,EAAG,CAAC,CAAC;EAAE;EACpBC,SAASA,CAAA,EAAG,CAAC,CAAC;EAAE;EAChBC,SAASA,CAAA,EAAG,CAAC,CAAC,CAAE;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}