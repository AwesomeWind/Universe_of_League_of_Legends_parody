{"ast":null,"code":"import Myheader from \"@/components/header.vue\";\nimport Myfooter from \"@/components/footer.vue\";\nimport { reactive, toRefs } from \"vue\";\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"app\",\n  components: {\n    Myfooter,\n    Myheader\n  },\n  setup() {\n    //这里存放数据\n    const data = reactive({});\n    return {\n      ...toRefs(data)\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {\n    //监听路有变化更新title\n    $route(n, o) {\n      document.title = n.meta.title;\n    }\n  },\n  //方法集合\n  methods: {\n    ...mapActions([\"fetchHeroes\"])\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.fetchHeroes;\n    console.log($store.state.heroes);\n  },\n  beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed() {},\n  //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};","map":{"version":3,"names":["Myheader","Myfooter","reactive","toRefs","mapActions","name","components","setup","data","computed","watch","$route","n","o","document","title","meta","methods","created","mounted","fetchHeroes","console","log","$store","state","heroes","beforeCreate","beforeMount","beforeUpdate","updated","beforeDestroy","destroyed","activated"],"sources":["D:\\MyCode\\Vuescode\\league_of_legends_universe\\src\\App.vue"],"sourcesContent":["<template>\n    <Myheader></Myheader>\n    <router-view />\n    <Myfooter></Myfooter>\n</template>\n<script>\nimport Myheader from \"@/components/header.vue\";\nimport Myfooter from \"@/components/footer.vue\";\nimport { reactive, toRefs } from \"vue\";\nimport { mapActions } from \"vuex\";\n\nexport default {\n    name: \"app\",\n    components: { Myfooter, Myheader },\n    setup() {\n        //这里存放数据\n        const data = reactive({});\n        return {\n            ...toRefs(data),\n        };\n    },\n    //监听属性 类似于data概念\n    computed: {},\n    //监控data中的数据变化\n    watch: {\n        //监听路有变化更新title\n        $route(n, o) {\n            document.title = n.meta.title;\n        },\n    },\n    //方法集合\n    methods: {\n        ...mapActions([\"fetchHeroes\"]),\n    },\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {},\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {\n        this.fetchHeroes;\n        console.log($store.state.heroes);\n    },\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n</style>"],"mappings":"AAMA,OAAOA,QAAO,MAAO,yBAAyB;AAC9C,OAAOC,QAAO,MAAO,yBAAyB;AAC9C,SAASC,QAAQ,EAAEC,MAAK,QAAS,KAAK;AACtC,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACXC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEL,QAAQ;IAAED;EAAS,CAAC;EAClCO,KAAKA,CAAA,EAAG;IACJ;IACA,MAAMC,IAAG,GAAIN,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,OAAO;MACH,GAAGC,MAAM,CAACK,IAAI;IAClB,CAAC;EACL,CAAC;EACD;EACAC,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,KAAK,EAAE;IACH;IACAC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAE;MACTC,QAAQ,CAACC,KAAI,GAAIH,CAAC,CAACI,IAAI,CAACD,KAAK;IACjC;EACJ,CAAC;EACD;EACAE,OAAO,EAAE;IACL,GAAGb,UAAU,CAAC,CAAC,aAAa,CAAC;EACjC,CAAC;EACD;EACAc,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW;IAChBC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,CAAC;EACpC,CAAC;EACDC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,WAAWA,CAAA,EAAG,CAAC,CAAC;EAAE;EAClBC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,OAAOA,CAAA,EAAG,CAAC,CAAC;EAAE;EACdC,aAAaA,CAAA,EAAG,CAAC,CAAC;EAAE;EACpBC,SAASA,CAAA,EAAG,CAAC,CAAC;EAAE;EAChBC,SAASA,CAAA,EAAG,CAAC,CAAC,CAAE;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}