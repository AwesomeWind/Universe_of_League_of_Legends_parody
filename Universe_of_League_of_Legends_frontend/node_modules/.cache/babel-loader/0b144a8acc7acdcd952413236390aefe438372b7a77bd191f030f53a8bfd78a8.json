{"ast":null,"code":"import { reactive, toRefs } from \"vue\";\nimport axios from \"axios\";\nimport Myfooter from \"../components/footer.vue\";\nimport Myheader from \"../components/header.vue\";\nexport default {\n  name: \"regionals_showcase\",\n  components: {\n    Myfooter,\n    Myheader\n  },\n  setup() {\n    const data = reactive({\n      regional: []\n    });\n    //这里存放数据\n    return {\n      ...toRefs(data)\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {},\n  //监控data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {\n    fetchRegional() {\n      axios.get(\"http://localhost:8089/api/region\").then(response => {\n        this.regional = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    this.fetchRegional();\n  },\n  beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed() {},\n  //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};","map":{"version":3,"names":["reactive","toRefs","axios","Myfooter","Myheader","name","components","setup","data","regional","computed","watch","methods","fetchRegional","get","then","response","catch","error","console","created","mounted","beforeCreate","beforeMount","beforeUpdate","updated","beforeDestroy","destroyed","activated"],"sources":["D:\\MyCode\\Vuescode\\league_of_legends_universe\\src\\views\\regionals_showcase.vue"],"sourcesContent":["<template>\r\n    <Myheader></Myheader>\r\n    <div id=\"bk\">\r\n        <div class=\"main\">\r\n            <h1>地区</h1>\r\n            <div id=\"regional_list\">\r\n                <router-link\r\n                    v-for=\"(region,index) in regional\"\r\n                    :key=\"index\"\r\n                    :to=\"'/RegionInfo/'+region.formerly\"\r\n                >\r\n                    <div\r\n                        class=\"regional_card\"\r\n                        :style=\"{'background-image': 'url(' + require(`../assets/img/regional_posters/${region.posters}`) + ')',\r\n                        'background-size': 'cover'}\"\r\n                    >\r\n                        <div class=\"mb\"></div>\r\n                        <img\r\n                            :src=\"require(`../assets/img/crest_icon/${region.icon}`)\"\r\n                            alt=\"\"\r\n                        >\r\n                        <div class=\"foot\">\r\n                            <p>{{ region.translation }}</p>\r\n                        </div>\r\n                    </div>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <myfooter></myfooter>\r\n</template>\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport axios from \"axios\";\r\nimport Myfooter from \"../components/footer.vue\";\r\nimport Myheader from \"../components/header.vue\";\r\n\r\nexport default {\r\n    name: \"regionals_showcase\",\r\n    components: {\r\n        Myfooter,\r\n        Myheader,\r\n    },\r\n    setup() {\r\n        const data = reactive({\r\n            regional: [],\r\n        });\r\n        //这里存放数据\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n    //监听属性 类似于data概念\r\n    computed: {},\r\n    //监控data中的数据变化\r\n    watch: {},\r\n    //方法集合\r\n    methods: {\r\n        fetchRegional() {\r\n            axios\r\n                .get(\"http://localhost:8089/api/region\")\r\n                .then((response) => {\r\n                    this.regional = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n    },\r\n    //生命周期 - 创建完成（可以访问当前this实例）\r\n    created() {},\r\n    //生命周期 - 挂载完成（可以访问DOM元素）\r\n    mounted() {\r\n        this.fetchRegional();\r\n    },\r\n    beforeCreate() {}, //生命周期 - 创建之前\r\n    beforeMount() {}, //生命周期 - 挂载之前\r\n    beforeUpdate() {}, //生命周期 - 更新之前\r\n    updated() {}, //生命周期 - 更新之后\r\n    beforeDestroy() {}, //生命周期 - 销毁之前\r\n    destroyed() {}, //生命周期 - 销毁完成\r\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang='less' scoped>\r\n@import url(../assets/css/Clear_style.css);\r\n@import url(../assets/css/regional_showcase.less);\r\n</style>"],"mappings":"AAgCA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAK;AACtC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,QAAO,MAAO,0BAA0B;AAC/C,OAAOC,QAAO,MAAO,0BAA0B;AAE/C,eAAe;EACXC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE;IACRH,QAAQ;IACRC;EACJ,CAAC;EACDG,KAAKA,CAAA,EAAG;IACJ,MAAMC,IAAG,GAAIR,QAAQ,CAAC;MAClBS,QAAQ,EAAE;IACd,CAAC,CAAC;IACF;IACA,OAAO;MACH,GAAGR,MAAM,CAACO,IAAI;IAClB,CAAC;EACL,CAAC;EACD;EACAE,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,KAAK,EAAE,CAAC,CAAC;EACT;EACAC,OAAO,EAAE;IACLC,aAAaA,CAAA,EAAG;MACZX,KAAI,CACCY,GAAG,CAAC,kCAAkC,EACtCC,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAACP,QAAO,GAAIO,QAAQ,CAACR,IAAI;MACjC,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV;EACJ,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACR,aAAa,CAAC,CAAC;EACxB,CAAC;EACDS,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,WAAWA,CAAA,EAAG,CAAC,CAAC;EAAE;EAClBC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,OAAOA,CAAA,EAAG,CAAC,CAAC;EAAE;EACdC,aAAaA,CAAA,EAAG,CAAC,CAAC;EAAE;EACpBC,SAASA,CAAA,EAAG,CAAC,CAAC;EAAE;EAChBC,SAASA,CAAA,EAAG,CAAC,CAAC,CAAE;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}