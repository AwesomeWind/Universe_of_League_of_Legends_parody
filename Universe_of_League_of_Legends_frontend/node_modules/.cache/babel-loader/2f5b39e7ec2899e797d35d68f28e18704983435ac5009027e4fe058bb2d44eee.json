{"ast":null,"code":"import { reactive, toRefs } from \"vue\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"hero_showcase\",\n  components: {},\n  setup() {\n    const data = reactive({\n      sortBy: \"\"\n    });\n    return {\n      ...toRefs(data)\n    };\n  },\n  //计算属性 类似于data概念\n  computed: {\n    ...mapState([\"heroes\"]),\n    ...mapState([\"regional\"])\n  },\n  //监听data中的数据变化\n  watch: {},\n  //方法集合\n  methods: {},\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed() {},\n  //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};","map":{"version":3,"names":["reactive","toRefs","mapState","name","components","setup","data","sortBy","computed","watch","methods","created","mounted","beforeCreate","beforeMount","beforeUpdate","updated","beforeDestroy","destroyed","activated"],"sources":["D:\\MyCode\\Vuescode\\league_of_legends_universe\\src\\views\\hero_showcase.vue"],"sourcesContent":["<template>\r\n    <div id=\"bk\">\r\n    </div>\r\n    <div class=\"search_bar\">\r\n        <div class=\"search_input\">\r\n            <img src=\"@/assets/img/public_img/hero_crest_icon.png\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"keyword\"\r\n                placeholder=\"找到一个英雄\"\r\n            >\r\n        </div>\r\n        <div >\r\n            <label for=\"sort-by\">筛选方式</label>\r\n            <select\r\n                v-model=\"sortBy\"\r\n                id=\"sort-by\"\r\n            >\r\n                <option value=\"letter\">A~Z</option>\r\n                <option value=\"latest\">最新</option>\r\n                <option value=\"region\">地区</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div id=\"box_head\">\r\n        <img src=\"@/assets/img/public_img/hero_crest_icon.png\">\r\n        <div>\r\n            <h1>英雄</h1>\r\n        </div>\r\n    </div>\r\n    <div id=\"hero_list\">\r\n        <router-link\r\n            v-for=\"(hero,index) in heroes\"\r\n            :key=\"index\"\r\n            :to=\"`/HeroInfo/${hero.formerly}`\"\r\n        >\r\n            <div\r\n                class=\"hero_card\"\r\n                :style=\"{\r\n                  'background-image': 'url(' + require(`@/assets/img/hero_posters/${hero.posters}`) + ')',\r\n                  'background-position': `${hero.x*1.0/hero.width*100}% ${hero.y*1.0/hero.height*100}%`,\r\n                  'background-size': 'cover',\r\n                  }\"\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <h2>{{ hero.translation }}</h2>\r\n                        <h1>{{ regional.find(item => item.formerly === hero.relevantRegion).translation }}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <p>探索<span>⇢</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </router-link>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n    name: \"hero_showcase\",\r\n    components: {},\r\n    setup() {\r\n        const data = reactive({\r\n            sortBy: \"\",\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n    //计算属性 类似于data概念\r\n    computed: {\r\n        ...mapState([\"heroes\"]),\r\n        ...mapState([\"regional\"]),\r\n    },\r\n    //监听data中的数据变化\r\n    watch: {},\r\n    //方法集合\r\n    methods: {},\r\n    //生命周期 - 创建完成（可以访问当前this实例）\r\n    created() {},\r\n    //生命周期 - 挂载完成（可以访问DOM元素）\r\n    mounted() {},\r\n    beforeCreate() {}, //生命周期 - 创建之前\r\n    beforeMount() {}, //生命周期 - 挂载之前\r\n    beforeUpdate() {}, //生命周期 - 更新之前\r\n    updated() {}, //生命周期 - 更新之后\r\n    beforeDestroy() {}, //生命周期 - 销毁之前\r\n    destroyed() {}, //生命周期 - 销毁完成\r\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang='less' scoped>\r\n@import url(@/assets/css/Clear_style.css);\r\n@import url(@/assets/css/hero_showcase.css);\r\n</style>"],"mappings":"AA2DA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAK;AACtC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACJ,MAAMC,IAAG,GAAIN,QAAQ,CAAC;MAClBO,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,OAAO;MACH,GAAGN,MAAM,CAACK,IAAI;IAClB,CAAC;EACL,CAAC;EACD;EACAE,QAAQ,EAAE;IACN,GAAGN,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACvB,GAAGA,QAAQ,CAAC,CAAC,UAAU,CAAC;EAC5B,CAAC;EACD;EACAO,KAAK,EAAE,CAAC,CAAC;EACT;EACAC,OAAO,EAAE,CAAC,CAAC;EACX;EACAC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ;EACAC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,WAAWA,CAAA,EAAG,CAAC,CAAC;EAAE;EAClBC,YAAYA,CAAA,EAAG,CAAC,CAAC;EAAE;EACnBC,OAAOA,CAAA,EAAG,CAAC,CAAC;EAAE;EACdC,aAAaA,CAAA,EAAG,CAAC,CAAC;EAAE;EACpBC,SAASA,CAAA,EAAG,CAAC,CAAC;EAAE;EAChBC,SAASA,CAAA,EAAG,CAAC,CAAC,CAAE;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}