{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"scroll-container\",\n  ref: \"scrollContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['item', {\n        'pot': index === $data.currentIndex\n      }])\n    }, \" div.i \", 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", {\n    class: \"progress-bar\",\n    style: _normalizeStyle({\n      width: $data.progressWidth + '%'\n    })\n  }, null, 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","items","item","index","key","_normalizeClass","currentIndex","style","_normalizeStyle","width","progressWidth"],"sources":["D:\\MyCode\\vueCode\\league_of_legends_universe\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n    <div>\n        <div\n            class=\"scroll-container\"\n            ref=\"scrollContainer\"\n        >\n            <div\n                v-for=\"(item, index) in items\"\n                :key=\"index\"\n                :class=\"['item', { 'pot': index === currentIndex }]\"\n            >\n                div.i\n            </div>\n        </div>\n        <div\n            class=\"progress-bar\"\n            :style=\"{ width: progressWidth + '%' }\"\n        ></div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            items: [], // 页面中具有 \"pot\" 类属性的元素数组\n            currentIndex: 0, // 当前滚轮滚动到的元素索引\n            progressWidth: 0, // 进度条的宽度百分比\n        };\n    },\n    mounted() {\n        const scrollContainer = this.$refs.scrollContainer;\n\n        const handleScroll = (event) => {\n            // 获取具有 \"pot\" 类属性的元素列表\n            const potItems = Array.from(\n                scrollContainer.querySelectorAll(\".pot\")\n            );\n\n            // 计算当前滚轮滚动到的元素索引\n            const scrollTop = scrollContainer.scrollTop;\n            const containerHeight = scrollContainer.clientHeight;\n            const itemHeight = scrollContainer.scrollHeight / potItems.length;\n            const newIndex = Math.floor(\n                (scrollTop + containerHeight / 2) / itemHeight\n            );\n\n            // 更新当前元素索引和进度条的宽度百分比\n            this.currentIndex = newIndex;\n            this.progressWidth = (newIndex / potItems.length) * 100;\n        };\n\n        // 监听滚轮事件\n        scrollContainer.addEventListener(\"scroll\", handleScroll);\n\n        // 获取页面中具有 \"pot\" 类属性的元素数组\n        this.items = Array.from(document.querySelectorAll(\".pot\"));\n    },\n};\n</script>\n\n<style scoped>\n.scroll-container {\n    width: 100%;\n    height: 300px;\n    overflow-x: scroll;\n    scroll-snap-type: x mandatory;\n    white-space: nowrap;\n}\n\n.item {\n    display: inline-block;\n    width: 200px;\n    height: 100%;\n    scroll-snap-align: start;\n}\n\n.progress-bar {\n    width: 0;\n    height: 5px;\n    background-color: blue;\n}\n</style>"],"mappings":";;;EAGYA,KAAK,EAAC,kBAAkB;EACxBC,GAAG,EAAC;;;uBAHZC,mBAAA,CAiBM,cAhBFC,mBAAA,CAWM,OAXNC,UAWM,I,kBAPFF,mBAAA,CAMMG,SAAA,QAAAC,WAAA,CALsBC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBADvBR,mBAAA,CAMM;MAJDS,GAAG,EAAED,KAAK;MACVV,KAAK,EAAAY,eAAA;QAAA,OAAoBF,KAAK,KAAKH,KAAA,CAAAM;MAAY;OACnD,SAED;0DAEJV,mBAAA,CAGO;IAFHH,KAAK,EAAC,cAAc;IACnBc,KAAK,EAAAC,eAAA;MAAAC,KAAA,EAAWT,KAAA,CAAAU,aAAa;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}