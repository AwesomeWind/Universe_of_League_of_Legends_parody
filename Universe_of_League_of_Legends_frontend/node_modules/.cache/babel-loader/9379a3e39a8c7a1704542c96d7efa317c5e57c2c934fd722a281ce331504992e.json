{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1315f0f0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mind\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"posters\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProgressBar = _resolveComponent(\"ProgressBar\");\n  const _component_HeadPoster = _resolveComponent(\"HeadPoster\");\n  const _component_BodyText = _resolveComponent(\"BodyText\");\n  const _component_ExtendedReading = _resolveComponent(\"ExtendedReading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_ProgressBar, {\n    Scroll: _ctx.scroll\n  }, {\n    name: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.hero.translation), 1 /* TEXT */)]),\n\n    title: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.hero.title), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"Scroll\"]), _createVNode(_component_HeadPoster), _createVNode(_component_BodyText), _createVNode(_component_ExtendedReading)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_ProgressBar","Scroll","_ctx","scroll","name","_withCtx","hero","translation","title","_component_HeadPoster","_component_BodyText","_component_ExtendedReading"],"sources":["D:\\MyCode\\vueCode\\league_of_legends_universe\\src\\views\\hero_biography.vue"],"sourcesContent":["<template>\r\n    <div class=\"mind\">\r\n      <div class=\"posters\"></div>\r\n        <ProgressBar :Scroll=\"scroll\">\r\n            <template v-slot:name>{{ hero.translation }}</template>\r\n            <template v-slot:title>{{ hero.title }}</template>\r\n        </ProgressBar>\r\n        <HeadPoster></HeadPoster>\r\n        <BodyText></BodyText>\r\n        <ExtendedReading></ExtendedReading>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport axios from \"axios\";\r\nimport HeadPoster from \"@/components/ShowcaseHeadPoster.vue\";\r\nimport BodyText from \"@/components/ShowcaseBodyText.vue\";\r\nimport ExtendedReading from \"@/components/ShowcaseExtendedReading.vue\";\r\nimport ProgressBar from \"@/components/ShowcaseProgressBar.vue\";\r\n\r\nexport default {\r\n    name: \"\",\r\n    components: { HeadPoster, BodyText, ExtendedReading, ProgressBar },\r\n    setup() {\r\n        //这里存放数据\r\n        const data = reactive({\r\n            hero: {},\r\n            scroll: 0,\r\n        });\r\n        return {\r\n            ...toRefs(data),\r\n        };\r\n    },\r\n    //计算属性\r\n    computed: {},\r\n    //监听属性\r\n    watch: {},\r\n    //方法集合\r\n    methods: {\r\n        findHero(formerly) {\r\n            axios\r\n                .get(`http://localhost:8089/api/findHero?formerly=${formerly}`)\r\n                .then((response) => {\r\n                    this.hero = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n    },\r\n    beforeCreate() {}, //生命周期 - 创建之前\r\n    created() {\r\n        this.findHero(this.$route.params.heroId);\r\n    }, //生命周期 - 创建之后（可以访问当前this实例）\r\n    beforeMount() {}, //生命周期 - 挂载之前\r\n    mounted() {\r\n        console.log(this.$route.params.heroId);\r\n        window.addEventListener(\"scroll\", () => {\r\n            this.scroll = document.documentElement.scrollTop;\r\n        });\r\n    }, //生命周期 - 挂载之后（可以访问DOM元素）\r\n    beforeUpdate() {}, //生命周期 - 更新之前\r\n    updated() {}, //生命周期 - 更新之后\r\n    beforeUnmount() {}, //生命周期 - 卸载之前\r\n    unmounted() {}, //生命周期 - 卸载之后\r\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\r\n};\r\n</script>\r\n<style lang='less' scoped>\r\n.mind {\r\n    position: relative;\r\n    background-color: #09090c;\r\n    color: white;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-flow: column;\r\n    .posters{\r\n      background-color: wheat;\r\n      width: ;\r\n    }\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAA2B;EAAtBD,KAAK,EAAC;AAAS;;;;;;;uBADtBE,mBAAA,CASM,OATNC,UASM,GARJC,UAA2B,EACzBC,YAAA,CAGcC,sBAAA;IAHAC,MAAM,EAAEC,IAAA,CAAAC;EAAM;IACPC,IAAI,EAAAC,QAAA,CAAC,MAAsB,C,kCAAnBH,IAAA,CAAAI,IAAI,CAACC,WAAW,iB;;IACxBC,KAAK,EAAAH,QAAA,CAAC,MAAgB,C,kCAAbH,IAAA,CAAAI,IAAI,CAACE,KAAK,iB;;;iCAExCT,YAAA,CAAyBU,qBAAA,GACzBV,YAAA,CAAqBW,mBAAA,GACrBX,YAAA,CAAmCY,0BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}