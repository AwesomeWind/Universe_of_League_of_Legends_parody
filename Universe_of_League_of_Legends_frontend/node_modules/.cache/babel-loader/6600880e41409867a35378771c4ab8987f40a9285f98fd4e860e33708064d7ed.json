{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["D:\\MyCode\\league_of_legends_universe\\src\\App.vue"],"sourcesContent":["<template>\n    <div class=''></div>\n</template>\n<script>\nimport Myfooter from './components/footer.vue';\nimport Myheader from './components/header.vue';\n\nexport default {\n    name: \"app\",\n  components: {\n      Myfooter,\n    },\n    setup() {\n        //这里存放数据\n        return {};\n    },\n    //监听属性 类似于data概念\n    computed: {},\n    //监控data中的数据变化\n    watch: {},\n    //方法集合\n    methods: {},\n    //生命周期 - 创建完成（可以访问当前this实例）\n    created() {},\n    //生命周期 - 挂载完成（可以访问DOM元素）\n    mounted() {},\n    beforeCreate() {}, //生命周期 - 创建之前\n    beforeMount() {}, //生命周期 - 挂载之前\n    beforeUpdate() {}, //生命周期 - 更新之前\n    updated() {}, //生命周期 - 更新之后\n    beforeDestroy() {}, //生命周期 - 销毁之前\n    destroyed() {}, //生命周期 - 销毁完成\n    activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发\n};\n</script>\n<style lang='less' scoped>\n//@import url(); 引入公共css类\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAE;;uBAAbC,mBAAA,CAAoB,OAApBC,UAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}