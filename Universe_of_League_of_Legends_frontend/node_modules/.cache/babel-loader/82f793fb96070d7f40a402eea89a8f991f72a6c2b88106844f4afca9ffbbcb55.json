{"ast":null,"code":"export default {\n  data() {\n    return {\n      items: [],\n      // 页面中具有 \"pot\" 类属性的元素数组\n      currentIndex: 0,\n      // 当前滚轮滚动到的元素索引\n      progressWidth: 0 // 进度条的宽度百分比\n    };\n  },\n\n  mounted() {\n    const scrollContainer = this.$refs.scrollContainer;\n    const handleScroll = event => {\n      // 获取具有 \"pot\" 类属性的元素列表\n      const potItems = Array.from(scrollContainer.querySelectorAll(\".pot\"));\n\n      // 计算当前滚轮滚动到的元素索引\n      const scrollTop = scrollContainer.scrollTop;\n      const containerHeight = scrollContainer.clientHeight;\n      const itemHeight = scrollContainer.scrollHeight / potItems.length;\n      const newIndex = Math.floor((scrollTop + containerHeight / 2) / itemHeight);\n\n      // 更新当前元素索引和进度条的宽度百分比\n      this.currentIndex = newIndex;\n      this.progressWidth = newIndex / potItems.length * 100;\n    };\n\n    // 监听滚轮事件\n    scrollContainer.addEventListener(\"scroll\", handleScroll);\n\n    // 获取页面中具有 \"pot\" 类属性的元素数组\n    this.items = Array.from(document.querySelectorAll(\".pot\"));\n  }\n};","map":{"version":3,"names":["data","items","currentIndex","progressWidth","mounted","scrollContainer","$refs","handleScroll","event","potItems","Array","from","querySelectorAll","scrollTop","containerHeight","clientHeight","itemHeight","scrollHeight","length","newIndex","Math","floor","addEventListener","document"],"sources":["D:\\MyCode\\vueCode\\league_of_legends_universe\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n    <div>\n        <div\n            class=\"scroll-container\"\n            ref=\"scrollContainer\"\n        >\n            <div\n                v-for=\"(item, index) in items\"\n                :key=\"index\"\n                :class=\"['item', { 'pot': index === currentIndex }]\"\n            >\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n                <div class=\"ccc\"></div>\n            </div>\n        </div>\n        <div\n            class=\"progress-bar\"\n            :style=\"{ width: progressWidth + '%' }\"\n        ></div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            items: [], // 页面中具有 \"pot\" 类属性的元素数组\n            currentIndex: 0, // 当前滚轮滚动到的元素索引\n            progressWidth: 0, // 进度条的宽度百分比\n        };\n    },\n    mounted() {\n        const scrollContainer = this.$refs.scrollContainer;\n\n        const handleScroll = (event) => {\n            // 获取具有 \"pot\" 类属性的元素列表\n            const potItems = Array.from(\n                scrollContainer.querySelectorAll(\".pot\")\n            );\n\n            // 计算当前滚轮滚动到的元素索引\n            const scrollTop = scrollContainer.scrollTop;\n            const containerHeight = scrollContainer.clientHeight;\n            const itemHeight = scrollContainer.scrollHeight / potItems.length;\n            const newIndex = Math.floor(\n                (scrollTop + containerHeight / 2) / itemHeight\n            );\n\n            // 更新当前元素索引和进度条的宽度百分比\n            this.currentIndex = newIndex;\n            this.progressWidth = (newIndex / potItems.length) * 100;\n        };\n\n        // 监听滚轮事件\n        scrollContainer.addEventListener(\"scroll\", handleScroll);\n\n        // 获取页面中具有 \"pot\" 类属性的元素数组\n        this.items = Array.from(document.querySelectorAll(\".pot\"));\n    },\n};\n</script>\n\n<style scoped>\n.scroll-container {\n    width: 100%;\n    height: 300px;\n    overflow-x: scroll;\n    scroll-snap-type: x mandatory;\n    white-space: nowrap;\n}\n\n.item {\n    display: inline-block;\n    width: 200px;\n    height: 100%;\n    scroll-snap-align: start;\n}\n\n.ccc{\n  width: 100VW;\n  height: 200px;\n  background-color: azure;\n  border: solid 1px bla;\n}\n.progress-bar {\n    width: 0;\n    height: 5px;\n    background-color: blue;\n}\n</style>"],"mappings":"AA8BA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MAAE;MACXC,YAAY,EAAE,CAAC;MAAE;MACjBC,aAAa,EAAE,CAAC,CAAE;IACtB,CAAC;EACL,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACN,MAAMC,eAAc,GAAI,IAAI,CAACC,KAAK,CAACD,eAAe;IAElD,MAAME,YAAW,GAAKC,KAAK,IAAK;MAC5B;MACA,MAAMC,QAAO,GAAIC,KAAK,CAACC,IAAI,CACvBN,eAAe,CAACO,gBAAgB,CAAC,MAAM,CAC3C,CAAC;;MAED;MACA,MAAMC,SAAQ,GAAIR,eAAe,CAACQ,SAAS;MAC3C,MAAMC,eAAc,GAAIT,eAAe,CAACU,YAAY;MACpD,MAAMC,UAAS,GAAIX,eAAe,CAACY,YAAW,GAAIR,QAAQ,CAACS,MAAM;MACjE,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CACvB,CAACR,SAAQ,GAAIC,eAAc,GAAI,CAAC,IAAIE,UACxC,CAAC;;MAED;MACA,IAAI,CAACd,YAAW,GAAIiB,QAAQ;MAC5B,IAAI,CAAChB,aAAY,GAAKgB,QAAO,GAAIV,QAAQ,CAACS,MAAM,GAAI,GAAG;IAC3D,CAAC;;IAED;IACAb,eAAe,CAACiB,gBAAgB,CAAC,QAAQ,EAAEf,YAAY,CAAC;;IAExD;IACA,IAAI,CAACN,KAAI,GAAIS,KAAK,CAACC,IAAI,CAACY,QAAQ,CAACX,gBAAgB,CAAC,MAAM,CAAC,CAAC;EAC9D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}